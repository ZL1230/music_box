{"remainingRequest":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itryl\\Desktop\\temporary\\music-player\\src\\views\\Result.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\src\\views\\Result.vue","mtime":1619321270000},{"path":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itryl\\Desktop\\temporary\\music-player\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Result.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA","file":"Result.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"result-container\">\r\n    <div class=\"title-wrap\">\r\n      <!-- 标题 -->\r\n      <h2 class=\"title\">{{ $route.query.q }}</h2>\r\n      <span class=\"sub-title\">找到 {{ count }} 个结果</span>\r\n    </div>\r\n    <el-tabs v-model=\"activeIndex\">\r\n      <el-tab-pane label=\"歌曲\" name=\"songs\">\r\n        <table class=\"el-table\">\r\n          <thead>\r\n            <th></th>\r\n            <th>音乐标题</th>\r\n            <th>歌手</th>\r\n            <th>专辑</th>\r\n            <th>时长</th>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              v-for=\"(item, index) in songList\"\r\n              :key=\"index\"\r\n              class=\"el-table__row\"\r\n              @dblclick=\"playMusic(item.id)\"\r\n            >\r\n              <td>{{ index+1 }}</td>\r\n              <td>\r\n                <div class=\"song-wrap\">\r\n                  <div class=\"name-wrap\">\r\n                    <!-- 歌名 -->\r\n                    <span>{{ item.name }}</span>\r\n                    <!-- mv的图标 -->\r\n                    <span v-if=\"item.mvid != 0\" class=\"iconfont icon-mv\" style=\"color:deeppink\">mv</span>\r\n                  </div>\r\n                  <!-- 二级标题 -->\r\n                  <span v-if=\"item.alias.length != 0\">{{ item.alias[0] }}</span>\r\n                </div>\r\n              </td>\r\n              <td>{{ item.artists[0].name }}</td>\r\n              <td>{{ item.album.name }}</td>\r\n              <td>{{ item.duration }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"歌单\" name=\"lists\">\r\n        <div class=\"items\">\r\n          <div\r\n            v-for=\"(item, index) in playList\"\r\n            :key=\"index\"\r\n            class=\"item\"\r\n            @click=\"toPlaylist(item.id)\"\r\n          >\r\n            <div class=\"img-wrap\">\r\n              <div class=\"num-wrap\">\r\n                播放量:\r\n                <span class=\"num\">{{ item.playCount }}</span>\r\n              </div>\r\n              <img :src=\"item.coverImgUrl\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n            </div>\r\n            <p class=\"name\">{{ item.name }}</p>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"MV\" name=\"mv\">\r\n        <div class=\"items mv\">\r\n          <div v-for=\"(item, index) in mv\" :key=\"index\" class=\"item\" @click=\"toMV(item.id)\">\r\n            <div class=\"img-wrap\">\r\n              <!-- 封面 -->\r\n              <img :src=\"item.cover\" alt=\"\" />\r\n              <span class=\"iconfont icon-play\"></span>\r\n              <div class=\"num-wrap\">\r\n                <div class=\"iconfont icon-play\"></div>\r\n                <!-- 播放次数 -->\r\n                <div class=\"num\">{{ item.playCount }}</div>\r\n              </div>\r\n              <!-- 持续时间 -->\r\n              <span class=\"time\">{{ item.duration }}</span>\r\n            </div>\r\n            <div class=\"info-wrap\">\r\n              <!-- mv名 -->\r\n              <div class=\"name\">{{ item.name }}</div>\r\n              <!-- 歌手名 -->\r\n              <div class=\"singer\">{{ item.artistName }}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n<!-- 分页器 -->\r\n      <el-pagination\r\n        @current-change=\"handleCurrentChange\"\r\n        background\r\n        layout=\"prev, pager, next\"\r\n        :total=\"total\"\r\n        :current-page=\"page\"\r\n        :page-size=\"10\"\r\n        :limit=\"limit\"\r\n      >\r\n      </el-pagination>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  // 导入 aixos\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'result',\r\n    data() {\r\n      return {\r\n        // tab切换时 会改变的数据\r\n        activeIndex: 'songs',\r\n        total: 0,\r\n        page:1,\r\n        limit:10,\r\n        // 保存 查询歌曲\r\n        songList: [],\r\n        // 保存歌单的字段\r\n        playList: [],\r\n        // 保存mv的字段\r\n        mv: [],\r\n        // 搜索结果的总数\r\n        count: 0,\r\n        type:1\r\n      }\r\n    },\r\n    // 生命周期钩子 回调函数\r\n    created() {\r\n      this.search()\r\n    },\r\n    // 侦听器\r\n    watch: {\r\n      activeIndex() {\r\n        // songs 歌曲\r\n        // lists 歌单\r\n        // mv    mv\r\n        this.page=1\r\n       \r\n\r\n        \r\n        switch (this.activeIndex) {\r\n          case 'songs':\r\n            this.type = 1\r\n           this.limit=10\r\n            break  \r\n          case 'lists':\r\n            this.type = 1000\r\n            this.limit=10\r\n            break\r\n          case 'mv':\r\n            this.type = 1004\r\n             this.limit=8\r\n            break\r\n\r\n          default:\r\n            break\r\n        }\r\n\r\n        axios({\r\n          url: 'https://autumnfish.cn/search',\r\n          method: 'get',\r\n          params: {\r\n            keywords: this.$route.query.q,\r\n           \r\n            // 获取的数据量\r\n            limit:this.limit, // limit: limit\r\n            //分页\r\n            offset:(this.page-1)*this.limit,\r\n             type:this.type // type:type,\r\n          }\r\n        }).then(res => {\r\n          //console.log(res)\r\n          // 1.获取歌曲\r\n          if (this.type == 1) {\r\n            // 歌曲\r\n            this.songList = res.data.result.songs\r\n            this.count=res.data.result.songCount\r\n            this.total=res.data.result.songCount\r\n            // 计算歌曲时间\r\n           for(let i=0;i<this.songList.length;i++){\r\n                let duration = this.songList[i].duration;  \r\n                let min = parseInt(duration/1000/60);\r\n                if(min<10){\r\n                      min='0'+min\r\n                }\r\n                let sec = parseInt(duration/1000%60)\r\n                    if(sec<10){\r\n                      sec='0'+sec\r\n                    }\r\n                    //console.log(min+\" \"+sec)\r\n                    this.songList[i].duration=`${min}:${sec}`\r\n          }\r\n          }\r\n          //2. 获取 歌单\r\n          else if (this.type == 1000) {\r\n            // 歌单的逻辑\r\n            this.playList = res.data.result.playlists\r\n            this.total=res.data.result.playlistCount\r\n            // 处理 播放次数\r\n            for (let i = 0; i < this.playList.length; i++) {\r\n              if (this.playList[i].playCount > 100000) {\r\n                this.playList[i].playCount =parseInt(this.playList[i].playCount / 10000) + '万'\r\n              }\r\n            }\r\n          } else {\r\n            //3. 保存mv数据\r\n            this.mv = res.data.result.mvs\r\n            // 总数\r\n            this.total=res.data.result.mvCount\r\n            // console.log(this.mv)\r\n            // 处理数据播放量\r\n            for(let i=0;i<this.mv.length;i++){\r\n                  if(this.mv[i].playCount>100000){\r\n                    this.mv[i].playCount=parseInt(this.mv[i].playCount/10000)+'万'\r\n                  }\r\n                }\r\n                //播放mv的时长\r\n                   for(let i=0;i<this.mv.length;i++){\r\n               let duration=this.mv[i].duration\r\n               let min=parseInt(duration/1000/60)\r\n               if(min<10){\r\n                   min='0'+min\r\n               }\r\n               let sec=parseInt(duration/1000%60)\r\n               if(sec<10){\r\n                   sec='0'+sec\r\n               }\r\n               this.mv[i].duration=`${min}:${sec}`\r\n                }\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // 方法\r\n    methods: {\r\n      search(){\r\n        axios({\r\n        url: 'https://autumnfish.cn/search',\r\n        method: 'get',\r\n        params: {\r\n          keywords: this.$route.query.q,\r\n          limit: 10,\r\n          \r\n          offset:(this.page-1)*this.limit,\r\n          // 获取的数据量\r\n          type: 1\r\n          \r\n        }\r\n      }).then(res => {\r\n        //console.log(res)\r\n        //判断搜索内容是否报错  例如搜索了不该搜索的内部\r\n         if(res.data.hasOwnProperty('msg')){\r\n            this.$message({\r\n              message: '搜索内容异常！',\r\n              type: 'warning'\r\n            })\r\n          }else{\r\n          this.songList=res.data.result.songs;\r\n          this.count=res.data.result.songCount\r\n          this.total=res.data.result.songCount\r\n          for(let i=0;i<this.songList.length;i++){\r\n                  let duration = this.songList[i].duration;  \r\n                  let min = parseInt(duration/1000/60);\r\n                  if(min<10){\r\n                    min='0'+min\r\n                  }\r\n                  let sec = parseInt(duration/1000%60)\r\n                  if(sec<10){\r\n                    sec='0'+sec\r\n                  }\r\n                  //console.log(min+\" \"+sec)\r\n                  this.songList[i].duration=`${min}:${sec}`\r\n                }\r\n            }\r\n        },err=>{\r\n          console.log(err)\r\n        })\r\n      },\r\n      // 去mv详情页\r\n      toMV(id){\r\n        // this.$router.push(`/mv?q=${id}`)\r\n        this.$router.push('mvsdetail?q='+id)\r\n      },\r\n      // 去歌单详情页\r\n      toPlaylist(id){\r\n        // 跳转并携带数据即可\r\n        // this.$router.push(`/playlist?q=${id}`)\r\n        this.$router.push('listdetail?q='+id)\r\n      },\r\n      playMusic(id) {\r\n        axios({\r\n          url: 'https://autumnfish.cn/song/url',\r\n          method: 'get',\r\n          params: {\r\n            id // id:id\r\n          }\r\n        }).then(res => {\r\n          // console.log(res)\r\n          let url = res.data.data[0].url\r\n          // console.log(this.$parent.musicUrl)\r\n          // 设置给父组件的 播放地址\r\n          this.$parent.musicUrl = url\r\n        })\r\n      },\r\n      handleCurrentChange(val) {\r\n      console.log(`当前页: ${val}`);\r\n      this.page=val;\r\n         axios({\r\n          url:' https://autumnfish.cn/search',\r\n          method:'get',\r\n          params:{\r\n            keywords:this.$route.query.q,\r\n            limit:this.limit,\r\n            offset:(this.page-1)*this.limit,\r\n            type:this.type\r\n          }\r\n        }).then(res => {\r\n          console.log(res);\r\n          if(this.type==1){\r\n              this.songList=res.data.result.songs;\r\n                this.count=res.data.result.songCount\r\n                this.total=res.data.result.songCount\r\n                for(let i=0;i<this.songList.length;i++){\r\n                    let duration = this.songList[i].duration;  \r\n                    let min = parseInt(duration/1000/60);\r\n                    if(min<10){\r\n                      min='0'+min\r\n                    }\r\n                    let sec = parseInt(duration/1000%60)\r\n                    if(sec<10){\r\n                      sec='0'+sec\r\n                    }\r\n                    //console.log(min+\" \"+sec)\r\n                    this.songList[i].duration=`${min}:${sec}`\r\n                  }\r\n          }else if(this.type==1000){\r\n                this.playList=res.data.result.playlists;\r\n                this.total=res.data.result.playlistCount\r\n                for(let i=0;i<this.playList.length;i++){\r\n                  if(this.playList[i].playCount>100000){\r\n                    this.playList[i].playCount=parseInt(this.playList[i].playCount/10000)+'万'\r\n                  }\r\n                }\r\n          }else if(this.type==1004){\r\n                this.mv=res.data.result.mvs;\r\n                this.total=res.data.result.mvCount\r\n                for(let i=0;i<this.mv.length;i++){\r\n                  if(this.mv[i].playCount>100000){\r\n                    this.mv[i].playCount=parseInt(this.mv[i].playCount/10000)+'万'\r\n                  }\r\n                }\r\n          }\r\n\r\n        })\r\n    }\r\n      \r\n      \r\n    }\r\n  }\r\n</script>\r\n\r\n<style></style>\r\n"]}]}